# shellcheck shell=bash

# Determine OS and load platform-specific configuration #
is_mac() {
    [[ $(uname) == "Darwin" ]]
}

is_ubuntu() {
    command -v apt >/dev/null
}

if is_mac; then
    source "$DOTDOTFILES/lib/include/.zshrc.mac"
elif is_ubuntu; then
    source "$DOTDOTFILES/lib/include/.zshrc.ubuntu"
else
    echo 'Unknown OS!'
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# zoxide is fancy cd
source "$DOTDOTFILES/lib/include/.zshrc.zoxide"

# Load local zshrc customizations that are not to be tracked by git
[[ ! -f "$DOTDOTFILES/.zshrc.local" ]] || source "$DOTDOTFILES/.zshrc.local"

autoload -U add_plugin
autoload -U add_theme

add_plugin() {
    PLUGIN_GIT_URL="$1"

    if [ -z "$2" ]; then
        TEMP_NAME="$(basename "${PLUGIN_GIT_URL##*:}")"
        PLUGIN_FOLDER_NAME="${TEMP_NAME%%.git}"
    else
        PLUGIN_FOLDER_NAME="$2"
    fi

    config submodule add "$PLUGIN_GIT_URL" "lib/plugins/$PLUGIN_FOLDER_NAME"
}

add_theme() {
    THEME_GIT_URL="$1"
    TEMP_NAME="$(basename "${THEME_GIT_URL##*:}")"
    THEME_FOLDER_NAME="${TEMP_NAME%%.git}"
    config submodule add "$THEME_GIT_URL" "lib/themes/$THEME_FOLDER_NAME"
}

# the fuck
fuck () {
    TF_PYTHONIOENCODING=$PYTHONIOENCODING;
    export TF_SHELL=zsh;
    export TF_ALIAS=fuck;
    TF_SHELL_ALIASES=$(alias);
    export TF_SHELL_ALIASES;
    TF_HISTORY="$(fc -ln -10)";
    export TF_HISTORY;
    export PYTHONIOENCODING=utf-8;
    TF_CMD=$(
        thefuck THEFUCK_ARGUMENT_PLACEHOLDER $@
    ) && eval "$TF_CMD";
    unset TF_HISTORY;
    export PYTHONIOENCODING=$TF_PYTHONIOENCODING;
    test -n "$TF_CMD" && print -s "$TF_CMD"
}